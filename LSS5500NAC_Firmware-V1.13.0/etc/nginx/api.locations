location /api {
	if ($scheme != 'https') {
		content_by_lua '
			require("se.api.response")(
				ngx.HTTP_NOT_ACCEPTABLE,
				"Not Acceptable",
				{ content_type = "text/plain" }
			):send{ clean_headers = true }
		';
	}

#	access_log /var/log/nginx/access.log;

	if ($request_method = 'OPTIONS') {
		add_header 'Access-Control-Allow-Origin' '*';
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH';
		#
		# Custom headers and headers various browsers *should* be OK with but aren't
		#
		add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Origin,Cookie,Authorization,Referer';
		#
		# Tell client that this pre-flight info is valid for 20 days
		#
		add_header 'Access-Control-Max-Age' 1728000;
		add_header 'Content-Type' 'text/plain charset=UTF-8';
		add_header 'Content-Length' 0;
		return 204;
	}

#	if ($request_method !~ (GET|POST|PUT|DELETE|PATCH)) {
#		return 403;
#	}

#	if ($request_method ~ (POST|PUT|DELETE|PATCH)) {
#		add_header 'Access-Control-Allow-Credentials' 'true';
#	}

	add_header 'Access-Control-Allow-Origin' '*' always;
	add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
	add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Accept,Origin,Cookie,Authorization,Referer' always;
	content_by_lua_file /usr/lib/lua/se/api/app.lua;
}
